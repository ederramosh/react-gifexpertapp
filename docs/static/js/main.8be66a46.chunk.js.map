{"version":3,"sources":["components/AddCategories.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategories","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","image","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"mMAsCeA,EAnCO,SAAC,GAAyB,IAAtBC,EAAqB,EAArBA,cAAqB,EAEPC,mBAAS,wBAFF,mBAEpCC,EAFoC,KAExBC,EAFwB,KAoB3C,OACI,sBAAMC,SAbW,SAAEC,GACnBA,EAAEC,iBAGEJ,EAAWK,OAAOC,OAAS,IAE3BR,GAAe,SAAAS,GAAI,OAAMP,GAAN,mBAAqBO,OACxCN,EAAc,MAMlB,SACI,uBACIO,KAAK,OACLC,MAAQT,EACRU,SArBc,SAAEP,GACxBF,EAAcE,EAAEQ,OAAOF,a,+BCUhBG,EAlBF,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DAENC,EAFM,iDAE2CC,UAAWH,GAFtD,+DAGOI,MAAOF,GAHd,cAGNG,EAHM,gBAIWA,EAAKC,OAJhB,uBAIJC,EAJI,EAIJA,KAEFC,EAAOD,EAAKE,KAAK,SAAAC,GAAQ,IAAD,EAC1B,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAV9B,kBAcLM,GAdK,4CAAH,sDCYEO,EAVK,SAAC,GAAoB,IAAlBH,EAAiB,EAAjBA,MAAOV,EAAU,EAAVA,IAE1B,OACI,sBAAKc,UAAU,yCAAf,UACI,qBAAKC,IAAMf,EAAMgB,IAAMN,IACvB,4BAAKA,QCqBFO,EAxBC,SAAC,GAAkB,IAAhBnB,EAAe,EAAfA,SAAe,ECDN,SAAEA,GAAc,MAGdd,mBAAS,CAC/BqB,KAAM,GACNa,SAAS,IAL2B,mBAGjCC,EAHiC,KAG1BC,EAH0B,KAoBxC,OAZAC,qBAAW,WAEPxB,EAASC,GACJwB,MAAM,SAAAC,GACHH,EAAS,CACLf,KAAMkB,EACNL,SAAS,SAItB,CAAEpB,IAEEqB,EDjB0BK,CAAc1B,GAAlCa,EAFiB,EAEtBN,KAAaa,EAFS,EAETA,QAErB,OACI,eAAC,WAAD,WACI,oBAAIJ,UAAU,oCAAd,SAAoDhB,IAElDoB,GAAW,wCAEb,qBAAKJ,UAAU,YAAf,SAEQH,EAAOJ,KAAK,SAAAkB,GAAK,OACb,cAAC,EAAD,eAESA,GADCA,EAAMhB,aEazBiB,EA1BM,WAAO,IAAD,EAEa1C,mBAAU,CAAC,WAFxB,mBAEhB2C,EAFgB,KAEJ5C,EAFI,KAIvB,OACI,eAAC,WAAD,WACI,8CAEA,cAAC,EAAD,CAAeA,cAAkBA,IAEjC,uBAEA,6BAEQ4C,EAAWpB,KAAK,SAAAT,GAAQ,OACpB,cAAC,EAAD,CAEIA,SAAWA,GADLA,Y,MCdlC8B,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.8be66a46.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst AddCategories = ( { setCategories } ) => {\r\n\r\n    const [inputValue, setInputValue] = useState('Agrega una categoria');\r\n\r\n    const handleInputChange = ( e ) => {\r\n        setInputValue(e.target.value);\r\n    }\r\n\r\n    const handleSubmit = ( e ) => {\r\n        e.preventDefault();\r\n\r\n        //Simple validacion para que no acepte valores vacios y sin espacios\r\n        if( inputValue.trim().length > 2) {\r\n            //Aqui siempre llamamos un un callback para poderlo procesar.\r\n            setCategories( cats => [ inputValue, ...cats ] );\r\n            setInputValue('');\r\n        }\r\n        \r\n    }\r\n\r\n    return (\r\n        <form onSubmit={ handleSubmit }>\r\n            <input \r\n                type=\"text\"\r\n                value={ inputValue }\r\n                onChange={ handleInputChange }\r\n            />\r\n        </form>\r\n    )\r\n}\r\n\r\nAddCategories.propTypes = {\r\n    setCategories: PropTypes.func.isRequired\r\n}\r\n\r\nexport default AddCategories;","const getGifs = async( category ) => {\r\n\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${ encodeURI( category ) }&limit=10&api_key=dZY7r2EcCvRs3uKuuuzHlMmoNaxtQvSx`;\r\n    const resp = await fetch( url );\r\n    const { data } = await resp.json();\r\n\r\n    const gifs = data.map( img => {\r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_medium.url\r\n        }\r\n    } );\r\n    \r\n    return gifs;\r\n\r\n}\r\n\r\nexport default getGifs;","import React from 'react'\r\n\r\nconst GifGridItem = ({ title, url }) => {\r\n\r\n    return (\r\n        <div className=\"card animate__animated animate__fadeIn\">\r\n            <img src={ url } alt={ title } />\r\n            <p>{ title }</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default GifGridItem;\r\n","import React, { Fragment } from 'react';\r\nimport { useFetchGifs } from '../hooks/useFetchGifs';\r\nimport GifGridItem from './GifGridItem';\r\n\r\nconst GifGrid = ({ category }) => {\r\n\r\n    const { data:images, loading } = useFetchGifs( category );\r\n\r\n    return (\r\n        <Fragment>\r\n            <h3 className=\"animate__animated animate__fadeIn\">{ category }</h3>\r\n            \r\n            { loading && <p>Loading</p> }\r\n\r\n            <div className=\"card-grid\">\r\n                {\r\n                    images.map( image => (\r\n                        <GifGridItem\r\n                            key={ image.id }\r\n                            { ...image }\r\n                        />\r\n                    ))\r\n                }\r\n            </div>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default GifGrid\r\n","import { useEffect, useState } from 'react';\r\nimport getGifs from '../helpers/getGifs';\r\n\r\nexport const useFetchGifs = ( category ) => {\r\n\r\n    //el useState esta vez sera un literal object\r\n    const [state, setState] = useState({\r\n        data: [],\r\n        loading: true,\r\n    });\r\n\r\n    useEffect( () => {\r\n        \r\n        getGifs( category )\r\n            .then( imgs => {\r\n                setState({\r\n                    data: imgs,\r\n                    loading: false,\r\n                });\r\n            });\r\n\r\n    }, [ category ]);\r\n    \r\n    return state; //Solamente devuelve un arreglo vacio\r\n\r\n}\r\n","import React, { Fragment, useState } from 'react';\r\n\r\nimport AddCategories from './components/AddCategories';\r\nimport GifGrid from './components/GifGrid';\r\n\r\nconst GifExpertApp = () => {\r\n\r\n    const [categories, setCategories] = useState( ['Naruto'] );\r\n\r\n    return (\r\n        <Fragment>\r\n            <h1>GifExpertApp</h1>\r\n\r\n            <AddCategories setCategories = { setCategories } />\r\n            \r\n            <hr />\r\n\r\n            <ol>\r\n                {\r\n                    categories.map( category => (\r\n                        <GifGrid\r\n                            key={ category }\r\n                            category={ category }\r\n                        />\r\n                    ))\r\n                }\r\n            </ol>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default GifExpertApp\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport GifExpertApp from './GifExpertApp';\n\nimport './index.css';\n\nReactDOM.render(\n  <GifExpertApp />,\n  document.getElementById('root')\n);\n\n//This was a task\n//GifExpertApp\n//<h2>->GifExpertApp\n//<hr>"],"sourceRoot":""}